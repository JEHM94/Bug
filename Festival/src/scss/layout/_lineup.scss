@use 'base/mixins' as m;
@use 'base/variables' as v;

.lineup{
    background-color: v.$rosa;
    padding: 5rem 0;

    h3, p {
        text-align: center;
        color: v.$blanco;
    }
    .dia{
    text-transform: uppercase;
    margin: 5rem 0;
    font-size: 2.4rem;
    }
}

.escenarios-contenedor {
    @include m.tablet{
        @include m.grid(2, 3rem);
    }

    p {
        color: v.$negro;
        font-weight: bold;
    }

    span {
        font-weight: 600;
    }
}

.escenario {
    padding-top: 2rem;

    .nombre-escenario {
        &:after {
            content: ''; // siempre que tenga un pseudo elemento asi debo colocar un "content"
            display: block;
            width: 20rem;
            height: 10rem;
            background-size: 15rem;
            background-repeat: no-repeat;
            background-position: center center;
            margin: 2rem auto 0 auto;
        }
    }
}

.edm .nombre-escenario::after {
    background-image: url(../img/icono_edm.avif);
}
.rock .nombre-escenario::after {
    background-image: url(../img/icono_rock.avif);
}

.calendario {
    @include m.resetear-lista;

    li {
        padding: 2.5rem;
    }

}

.bg-verde {
    background-color: v.$verde;

    li:nth-child(odd) { // "odd" es un parametro para escoger los "hijos" impares dentro del "li"

        background-color: darken(v.$verde, 10%);
        
    }
}

.bg-amarillo {
    background-color: v.$amarillo;

    li:nth-child(odd) { // "odd" es un parametro para escoger los "hijos" impares dentro del "li"

        background-color: darken(v.$amarillo, 15%);
        
    }
}